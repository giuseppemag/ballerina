name: CI
on:
  push:
    branches:
      - main
    tags:
      - "*"
  pull_request:
jobs:
  frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    steps:
      - uses: actions/checkout@v4.2.2
      # - run: npx prettier . --check
      - run: yarn
      - run: yarn compile-test
      - run: yarn compile-web
      - run: yarn compile-mobile
      - run: yarn compile-ballerina-core
      - run: yarn compile-create-domain
      - run: yarn compile-playground-core
  backend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.2.2
      - uses: actions/setup-dotnet@v4.3.1
      - run: |
          dotnet restore backend
          dotnet tool restore
      - run: dotnet build backend
      # - run: dotnet fantomas --check backend
      - run: dotnet test backend
  ballerina-go:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend/libraries/ballerina-core-go
    steps:
      - uses: actions/checkout@v4.2.2
      - uses: actions/setup-go@v5.4.0
        with:
          go-version-file: backend/libraries/ballerina-core-go/go.mod
      # - name: Check formatting
      #   run: test -z "$(gofmt -l .)"
      # - run: go test ./...
      # - run: go build ./...
      # - name: Check go.mod is up to date
      #   run: go mod tidy -diff
  publish-ballerina-runtime:
    needs:
      - frontend
      - backend
      - ballerina-go
    runs-on: ubuntu-latest
    permissions:
      contents: write
    defaults:
      run:
        working-directory: backend/apps/ballerina-runtime
    steps:
      - uses: actions/checkout@v4.2.2
      - uses: actions/setup-dotnet@v4.3.1
      - run: dotnet restore
      - name: Build and package for all runtimes
        run: |
          for RUNTIME in osx-x64 win-x64 linux-x64 linux-arm64; do
            dotnet publish --runtime $RUNTIME
            zip -r ballerina-runtime.$RUNTIME.zip ./bin/Release/net9.0/$RUNTIME/publish
          done
      - name: Create GitHub Release
        if: startsWith(github.ref, 'refs/tags/')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          TAG_NAME=${{ github.ref_name }}
          gh release create "$TAG_NAME" -n "Release $TAG_NAME of the Ballerina ðŸ©° runtime." ballerina-runtime.*.zip
